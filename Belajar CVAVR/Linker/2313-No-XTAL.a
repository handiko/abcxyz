;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/18/2018
;Author  : Handiko Gesang
;Company : SDL Labs
;Comments:
;
;
;Chip type               : ATtiny2313
;AVR Core Clock frequency: 4.000000 MHz
;Memory model            : Tiny
;External RAM size       : 0
;Data Stack size         : 32
;*****************************************************/
;
;#include <tiny2313.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x50
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_standby=0x40
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;#include <delay.h>
;
;#define LED             PORTD.6
;#define DIT             PIND.5
;#define DAH             PIND.4
;
;#define SPEED           120
;
;// Declare your global variables here
;
;void main(void)
; 0000 0023 {

	.CSEG
;PCODE: $0000000A VOL: 0
; 0000 0024         char i;
; 0000 0025 
; 0000 0026 #pragma optsize-
; 0000 0027         CLKPR=0x80;
;	i -> R17
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; 0000 0028         CLKPR=0x00;
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0029 #ifdef _OPTIMIZE_SIZE_
; 0000 002A #pragma optsize+
; 0000 002B #endif
; 0000 002C 
; 0000 002D         PORTD=0x3F;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002E         DDRD=0x40;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002F 
; 0000 0030         ACSR=0x80;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0031 
; 0000 0032         for(i=0;i<3;i++)
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0033         {
; 0000 0034                 LED=1;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0035                 delay_ms(200);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0036                 LED=0;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0037                 delay_ms(200);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0038         }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0039 
; 0000 003A         while (1)
;PCODE: $0000002D VOL: 0
; 0000 003B         {
; 0000 003C                 if(!DIT)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 003D                 {
; 0000 003E                         LED=1;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 003F                         delay_ms((int)SPEED);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0040                         LED=0;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0041                         delay_ms((int)SPEED);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0042                 }
; 0000 0043                 if(!DAH)
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0044                 {
; 0000 0045                         LED=1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0046                         delay_ms((int)2.75*SPEED);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0047                         LED=0;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0048                         delay_ms((int)SPEED);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0049                 }
; 0000 004A         }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 004B }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
